{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/working-with-git-branch/","result":{"data":{"site":{"siteMetadata":{"title":"Blog of Badal Sarkar"}},"markdownRemark":{"id":"3b0b206d-3e37-5c5c-b898-a779e6e3a787","excerpt":"While working in software projects, we often need to try out different things\nlike adding new features, fixing bugs etc. For this type of work we should use\ngitâ€¦","html":"<p>While working in software projects, we often need to try out different things\nlike adding new features, fixing bugs etc. For this type of work we should use\ngit branches. Git branches are also helpful when two or more developers are\nworking on the same project.</p>\n<p><a href=\"https://git-scm.com/docs/git-branch\"> Git branch </a> is simply a copy of another\nbranch. Generally, the <code class=\"language-text\">main</code> branch contains the code that is good to go. When\nwe are doing anything new in our project like changing code, updating\ndocumentation, we should create a separate branch. This ensures that the <code class=\"language-text\">main</code>\nbranch is not impacted if anything goes wrong. You can read about branch <a href=\"https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell\"> here </a>.</p>\n<p>In my <a href=\"https://github.com/badalsarkar/Blink\">Blink</a> project, I wanted to add two\nnew\nfeatures<a href=\"https://github.com/badalsarkar/Blink/issues/4\">1</a><a href=\"https://github.com/badalsarkar/Blink/issues/5\">2</a>.\nThis is the perfect case for using <code class=\"language-text\">git branch</code>. Here, I will explain how I did\nit.</p>\n<h3>Filling issue in GitHub</h3>\n<p>As I am hosting my remote repository in GitHub, I wanted to create an issue for\neach feature in my repository. This will document the progress of my project. I\ncreated the following issues.</p>\n<p><img src=\"../asset/images/githubissue.png\" alt=\"\" width=\"400\"\nstyle=\"display:block; margin-left:auto;margin-right:auto\"></p>\n<h3>Creating git branches</h3>\n<p>Now, to separate my work on these two features, I created two git branches with\nthe name of the GitHub issue number. I put my branch name same as GitHub issue\nnumber because this will help me to trace back the work in future. So, I put the\nfollowing commands-</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch issue-4\n<span class=\"token function\">git</span> branch issue-5</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Note that I have two branches created from the <code class=\"language-text\">main</code> branch. This means that I can\nwork on two issues in parallel. This is another benefit for branching.</p>\n<p>Now I am ready to write some code.</p>\n<h3>Issue 4: Environment variable to control color output</h3>\n<p><a href=\"https://github.com/badalsarkar/Blink\">Blink</a> currently output the processing\nresult using color.</p>\n<img src=\"../asset/images/blinkoutput.png\" alt=\"\" width=\"350\" style=\"display:block; margin-left:auto;margin-right:auto\">\n<p>I was required to implement a\n<a href=\"https://github.com/Seneca-CDOT/topics-in-open-source-2020/wiki/lab-3#step-1-pick-your-features\">feature</a> to\nuse an environmental variable to control the color output.</p>\n<p><code class=\"language-text\">CLICOLOR=1</code> will print in color.\n<code class=\"language-text\">CLICOLOR-0</code> will print without color.</p>\n<p>I added a\n<a href=\"https://github.com/badalsarkar/Blink/blob/master/src/main/java/com/badalsarkar/Environment.java\">class</a>\nto encapsulate the processing of environment variables and modified the existing\ncodes. Here is the <a href=\"https://github.com/badalsarkar/Blink/commit/fa1734513f69df4875633223d52a503a3435e8b1\">commit</a>. Now,\nBlink reads the environment variable and prints accordingly.<code class=\"language-text\">CLICOLOR=0</code> gives\nthe following output.</p>\n<img src=\"../asset/images/blinkNewOutput.png\" alt=\"\" width=\"350\" style=\"display:block; margin-left:auto;margin-right:auto\">\n<p>Once I was done with my work, I committed the necessary changes.</p>\n<img src=\"../asset/images/issue4commit.png\" alt=\"\" width=\"400\" style=\"display:block; margin-left:auto;margin-right:auto\">\n<h3>Issue 5: Use a flag to determine which URL to print</h3>\n<p>The default behaviour of <a href=\"https://github.com/badalsarkar/Blink\">Blink</a> is to\nprint all URLs with the respective status. This\n<a href=\"https://github.com/badalsarkar/Blink/issues/5\">feature</a> will allow user to\nspecify the URLs to be printed.</p>\n<p><code class=\"language-text\">--all</code> or <code class=\"language-text\">-a</code> prints all URLs. This is the default behaviour if nothing is specified.</p>\n<p><code class=\"language-text\">--good</code> or <code class=\"language-text\">-g</code> prints URLs with status=GOOD.</p>\n<p><code class=\"language-text\">--bad</code> or <code class=\"language-text\">-b</code> prints URLs with status=BAD.</p>\n<p>The process was the same as I have done for issue 4. I need to update my\n<a href=\"https://github.com/badalsarkar/Blink/blob/master/src/main/java/com/badalsarkar/CliParser.java\">CliParser</a> class\nto add these options. I also changed the organization of my code a bit to make\nit more maintainable. Here is the\n<a href=\"https://github.com/badalsarkar/Blink/commit/13a62303c881931b9616859948c59ab89f6b7408\">commit</a>. The feature\nwas working properly and the command <code class=\"language-text\">java -jar blink.jar -bs file/path</code> will\nonly print bad URLs as shown below-</p>\n<img src=\"../asset/images/badURL.png\" alt=\"\" width=\"350\" style=\"display:block; margin-left:auto;margin-right:auto\">\n<h3>Time to merge</h3>\n<p>Now that both of my features were working properly, it was time to merge two\nbranches with the master branch. Note that all my work was done in separate\nbranches and <code class=\"language-text\">master</code> branch is not aware of those changes. To merge to <code class=\"language-text\">main</code>\nbranch we checkout to <code class=\"language-text\">main</code> branch with command <code class=\"language-text\">git checkout main</code>. Then we\nmerge a branch with command <code class=\"language-text\">git merge [branch to be merged]</code></p>\n<p>When I merged the branch <code class=\"language-text\">issue-4</code> it was a <a href=\"https://git-scm.com/docs/git-merge#_fast_forward_merge\">fast-forward\nmerge</a>. In fast forward\nmerge the <code class=\"language-text\">HEAD</code> is updated to point at the named commit. When merging branch\n<code class=\"language-text\">issue-5</code> I got an error due to <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Advanced-Merging#_advanced_merging\">merge\nconflict</a>.</p>\n<img src=\"../asset/images/mergeConflict.png\" alt=\"\" width=\"450\" style=\"display:block; margin-left:auto;margin-right:auto\">\n<p>Merge conflict\narises when two or more files have changes in the same line. Read\n<a href=\"https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging#_basic_merge_conflicts\">here</a>\nto see how to resolve merge conflicts. In a nutshell, we need to review our\nchanges and fix those ourselves. So, I reviewed all the conflicts and resolved\nthose and finally, merged <code class=\"language-text\">issue-5</code> branch to the <code class=\"language-text\">main</code> branch. Here is the\n<a href=\"https://github.com/badalsarkar/Blink/commit/5953c58c28c40ffa6cdc0d70a6eb1de68dea20cf\">commit</a>.</p>\n<h3>Closing issues in GitHub</h3>\n<p>Finally, the <code class=\"language-text\">main</code> branch is up-to-date and both of the features are working as\nexpected. Now, I need to close\n<a href=\"https://github.com/badalsarkar/Blink/issues/4\">issue-4</a> and\n<a href=\"https://github.com/badalsarkar/Blink/issues/5\">issue-5</a> in GitHub. In closing\ncomments, I just reference the commit which closed the issue. Again, this will\nhelp in tracing the work in future.</p>\n<h3>My learning</h3>\n<p>I learned a lot in terms of working with Git and GitHub. Branching, parallel\ndevelopment, merging, resolving merge conflicts were all new to me. I now have\nthe confidence to work more efficient with Git.</p>","frontmatter":{"title":"Working with Git Branch","date":"October 09, 2020","description":null}},"previous":{"fields":{"slug":"/2020/my-first-pr/"},"frontmatter":{"title":"My First PR (Pull Request)"}},"next":{"fields":{"slug":"/2020/release-02/"},"frontmatter":{"title":"Release 0.2 Week 1"}}},"pageContext":{"id":"3b0b206d-3e37-5c5c-b898-a779e6e3a787","previousPostId":"7e388faa-d2c7-5b79-81de-ab94891c1b57","nextPostId":"260b714f-bc88-56d1-aa5f-6c3160e9b9d8"}},"staticQueryHashes":["2841359383","916993862"]}