{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/main-header.js","webpack:///./src/pages/index.js"],"names":["MainHeader","title","Fragment","className","to","id","style","color","position","bottom","left","fontSize","textDecoration","target","BlogIndex","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,+B,kHCgDeA,G,UA3CI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,aACb,8BACA,yBAAKA,UAAU,WACb,kBAAC,OAAD,CAAMC,GAAG,SAASC,GAAG,gBAArB,SAGA,wBAAIF,UAAU,eAAeG,MAAO,CAAEC,MAAO,UAC1CN,GAEH,mDACA,yBACEK,MAAO,CACLE,SAAU,WACVC,OAAQ,MACRC,KAAM,OACNC,SAAU,QAGZ,kBAAC,OAAD,CACEL,MAAO,CAAEC,MAAO,UAAWK,eAAgB,QAC3CR,GAAG,8EACHS,OAAO,UAHT,+BAMQ,IAdV,WAgBE,kBAAC,OAAD,CACEP,MAAO,CAAEC,MAAO,UAAWK,eAAgB,QAC3CR,GAAG,0CACHS,OAAO,UAHT,oDCmCGC,UA7DG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBlB,QAAxB,QACZmB,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQP,SAAUA,EAAUf,MAAOgB,GACjC,kBAAC,IAAD,CAAKhB,MAAM,cAEX,yLAUJ,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAYD,MAAOgB,IACnB,kBAAC,IAAD,CAAQD,SAAUA,EAAUf,MAAOgB,GACjC,kBAAC,IAAD,CAAKhB,MAAM,cAEX,wBAAIK,MAAO,CAAEkB,UAAU,SACpBJ,EAAMK,KAAI,SAAAC,GACT,IAAMzB,EAAQyB,EAAKC,YAAY1B,OAASyB,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACE1B,UAAU,iBACV4B,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAM5B,GAAIsB,EAAKE,OAAOC,KAAMI,SAAS,OACnC,0BAAMA,SAAS,YAAYhC,KAG/B,+BAAQyB,EAAKC,YAAYO,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CL,SAAS","file":"component---src-pages-index-js-d226993d28bebcee50f2.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","//import \"../pages/mystyles.scss\"\nimport React from \"react\"\nimport Img from \"gatsby-image\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nconst MainHeader = ({ title }) => {\n  return (\n    <React.Fragment>\n      <div className=\"big-image\">\n        <div></div>\n        <div className=\"overlay\">\n          <Link to=\"/about\" id=\"about-button\">\n            About\n          </Link>\n          <h1 className=\"main-heading\" style={{ color: \"white\" }}>\n            {title}\n          </h1>\n          <p> Software Developer </p>\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: \"8px\",\n              left: \"16px\",\n              fontSize: \"50%\",\n            }}\n          >\n            <Link\n              style={{ color: \"#8c8c8c\", textDecoration: \"none\" }}\n              to=\"https://www.linkedin.com/in/md-saimum-khaled-a9911342/?originalSubdomain=bd\"\n              target=\"_blank\"\n            >\n              Photo credit: Saimum Khaled\n            </Link>{\" \"}\n            &nbsp; &nbsp; |&nbsp; &nbsp;\n            <Link\n              style={{ color: \"#8c8c8c\", textDecoration: \"none\" }}\n              to=\"https://en.wikipedia.org/wiki/Nafa-khum\"\n              target=\"_blank\"\n            >\n              Location: Nafa-khum, Bandarban, Bangladesh\n            </Link>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default MainHeader\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport MainHeader from \"../components/main-header\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {/* <Bio /> */}\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <MainHeader title={siteTitle} />\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {/* <Bio /> */}\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n      </Layout>\n    </React.Fragment>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}